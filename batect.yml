containers:
  build-env:
    image: mcr.microsoft.com/dotnet/core/sdk:3.1
    volumes:
      - local: .
        container: /code
        options: cached
      - type: cache
        name: nuget-cache
        container: /root/.nuget/packages
      - type: cache
        name: weatherApi-obj
        container: /code/src/WeatherApi/obj
      - type: cache
        name: weatherApi-tests-obj
        container: /code/src/WeatherApi.Tests/obj
    working_directory: /code
    environment:
      WEATHERDB__HOST: postgres
      WEATHERDB__DB: weather_db
      WEATHERDB__USER: weather_user
      WEATHERDB__PASSWORD: $POSTGRES_PASSWORD
    dependencies:
      - postgres
  postgres:
    image: postgres:13
    ports:
      - local: 5432
        container: 5432
    environment:
      POSTGRES_DB: weather_db
      POSTGRES_USER: weather_user
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  flyway-migrator:
    build_directory: db
    volumes:
      - local: db/migrations
        container: /migrations
        options: cached
      - local: db/scripts
        container: /scripts
        options: cached
    environment:
      HOST: postgres
      PORT: "5432"
      USERNAME: weather_user
      PASSWORD: $POSTGRES_PASSWORD
      DATABASE_NAME: weather_db
      SCHEMA_NAME: public
      MIGRATIONS_LOCATION: filesystem:/migrations
    dependencies:
      - postgres
  pulumi:
    image: pulumi/pulumi:v2.12.0
    volumes:
      - local: .
        container: /app
        options: cached
      - local: /var/run/docker.sock
        container: /var/run/docker.sock
    environment:
      PULUMI_ACCESS_TOKEN: $PULUMI_ACCESS_TOKEN
      GOOGLE_CREDENTIALS: $GOOGLE_CREDENTIALS
    entrypoint: bash
tasks:
  migrate-db:
    description: Run database migrations
    run:
      container: flyway-migrator
      entrypoint: /scripts/run-migrations.sh
  start-integration-test-db:
    description: Start DB with migrations applied for locally running integration tests
    run:
      container: flyway-migrator
      entrypoint: /scripts/run-migrations-keep-alive.sh
  build:
    description: Build Weather API
    run:
      container: build-env
      command: dotnet build
  test:
    description: Test Weather API
    run:
      container: build-env
      command: dotnet test
    prerequisites:
      - migrate-db
  deploy-base-infra:
    description: Deploy base infra using Pulumi
    run:
      container: pulumi
      working_directory: /app
      command: infra/deploy-base.sh
  build-push-image:
    description: Build and push docker image to GCR using Pulumi
    run:
      container: pulumi
      working_directory: /app
      command: infra/build-push.sh
  deploy:
    description: Deploy Weather API to GCP Cloud Run using Pulumi
    run:
      container: pulumi
      working_directory: /app
      command: infra/deploy.sh
